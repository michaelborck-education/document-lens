[project]
name = "document-lens"
version = "1.0.0"
description = "Multi-Modal Document Analysis Microservice"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Michael Borck"},
]
dependencies = [
    "fastapi==0.109.0",
    "uvicorn==0.27.0",
    "python-multipart==0.0.6",
    "slowapi==0.1.9",
    "pydantic==2.5.0",
    "pydantic-settings==2.1.0",
    "PyPDF2==3.0.1",
    "pdfplumber==0.10.3",
    "python-docx==1.1.0",
    "textstat==0.7.3",
    "nltk==3.8.1",
    "scikit-learn==1.4.0",
    "requests==2.31.0",
    "httpx==0.26.0",
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    "gunicorn==21.2.0",
    "spacy==3.7.2",
    "pandas==2.1.4",
    "pyarrow==15.0.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.6.0",
    "mypy>=1.11.0",
    "basedpyright>=1.18.0",
    "pytest>=8.3.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "httpx>=0.26.0",
]

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
target-version = "py311"
line-length = 100
fix = true

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "N",      # pep8-naming
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "ASYNC",  # flake8-async
    "PTH",    # flake8-use-pathlib
    "RUF",    # Ruff-specific rules
]
ignore = [
    "E501",   # line too long (handled by formatter)
    "B008",   # do not perform function calls in argument defaults
    "C901",   # too complex
    "W191",   # indentation contains tabs
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"app/core/config.py" = ["N805"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = false

[[tool.mypy.overrides]]
module = [
    "slowapi.*",
    "PyPDF2.*",
    "pdfplumber.*",
    "docx.*",
    "pptx.*",
    "textstat.*",
    "nltk.*",
    "sklearn.*",
    "spacy.*",
]
ignore_missing_imports = true

[tool.basedpyright]
venvPath = "."
venv = ".venv"
pythonVersion = "3.11"
typeCheckingMode = "standard"
reportMissingImports = true
reportMissingTypeStubs = false
reportGeneralTypeIssues = true
reportOptionalMemberAccess = true
reportOptionalCall = true
reportOptionalIterable = true
reportOptionalContextManager = true
reportOptionalOperand = true
reportTypedDictNotRequiredAccess = true
reportUntypedFunctionDecorator = false
reportUntypedClassDecorator = false
reportUntypedBaseClass = false
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedVariable = true
reportDuplicateImport = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=app",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
]